"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[5928],{5160:(a,e,t)=>{t.r(e),t.d(e,{comp:()=>o,data:()=>s});var n=t(6254);const r={},o=(0,t(6995).A)(r,[["render",function(a,e){return(0,n.uX)(),(0,n.CE)("div",null,e[0]||(e[0]=[(0,n.Fv)('<h2 id="什么是轨道六根数" tabindex="-1"><a class="header-anchor" href="#什么是轨道六根数"><span>什么是轨道六根数</span></a></h2><h2 id="从平面极坐标方程到三维空间坐标系" tabindex="-1"><a class="header-anchor" href="#从平面极坐标方程到三维空间坐标系"><span>从平面极坐标方程到三维空间坐标系</span></a></h2><h3 id="_1-轨道平面内的极坐标方程" tabindex="-1"><a class="header-anchor" href="#_1-轨道平面内的极坐标方程"><span>1. 轨道平面内的极坐标方程</span></a></h3><p>在轨道平面内（二维），位置由 <strong>真近点角 (\\nu)</strong> 和半径 (r) 描述，方程为： [ r(\\nu) = \\frac{a(1-e^2)}{1 + e\\cos\\nu} ] 其中： • (a) 为半长轴 • (e) 为离心率 • (\\nu) 为真近点角（从近地点起算的角度）</p><hr><h3 id="_2-三维空间坐标系转换" tabindex="-1"><a class="header-anchor" href="#_2-三维空间坐标系转换"><span>2. 三维空间坐标系转换</span></a></h3><p>为了将轨道平面映射到参考坐标系（如赤道坐标系），需通过三次旋转定义轨道方向：</p><ol><li><strong>绕参考坐标系 (z)-轴旋转 (\\Omega)</strong>（升交点赤经）</li><li><strong>绕新 (x)-轴旋转 (i)</strong>（轨道倾角）</li><li><strong>绕新 (z)-轴旋转 (\\omega)</strong>（近地点幅角）</li></ol><p>最终位置矢量在参考坐标系中的表达式为： [ \\mathbf{r} = \\begin{bmatrix} x \\ y \\ z \\end{bmatrix} = R_z(\\Omega) \\cdot R_x(i) \\cdot R_z(\\omega) \\cdot \\begin{bmatrix} r\\cos\\nu \\ r\\sin\\nu \\ 0 \\end{bmatrix} ]</p><hr><h3 id="_3-展开旋转矩阵" tabindex="-1"><a class="header-anchor" href="#_3-展开旋转矩阵"><span>3. 展开旋转矩阵</span></a></h3><p>通过展开旋转矩阵，位置矢量可写为： [ \\mathbf{r} = r \\cdot \\begin{bmatrix} \\cos\\Omega \\cos(\\omega+\\nu) - \\sin\\Omega \\sin(\\omega+\\nu)\\cos i \\ \\sin\\Omega \\cos(\\omega+\\nu) + \\cos\\Omega \\sin(\\omega+\\nu)\\cos i \\ \\sin(\\omega+\\nu)\\sin i \\end{bmatrix} ]</p><hr><h3 id="_4-三维轨道方程的参数化形式" tabindex="-1"><a class="header-anchor" href="#_4-三维轨道方程的参数化形式"><span>4. 三维轨道方程的参数化形式</span></a></h3><p>结合轨道平面方程 (r(\\nu))，三维轨道方程为： [ \\boxed{ \\mathbf{r}(\\nu) = \\frac{a(1-e^2)}{1 + e\\cos\\nu} \\cdot \\begin{bmatrix} \\cos\\Omega \\cos(\\omega+\\nu) - \\sin\\Omega \\sin(\\omega+\\nu)\\cos i \\ \\sin\\Omega \\cos(\\omega+\\nu) + \\cos\\Omega \\sin(\\omega+\\nu)\\cos i \\ \\sin(\\omega+\\nu)\\sin i \\end{bmatrix} } ]</p><hr><h3 id="_5-球坐标系中的显式表达" tabindex="-1"><a class="header-anchor" href="#_5-球坐标系中的显式表达"><span>5. 球坐标系中的显式表达</span></a></h3><p>若需用球坐标 ((r, \\alpha, \\delta)) 表示（(r) 为距离，(\\alpha) 为赤经，(\\delta) 为赤纬）：</p><ol><li><strong>赤经 (\\alpha)</strong>： [ \\alpha = \\Omega + \\arctan\\left[\\frac{\\sin(\\omega+\\nu)\\cos i}{\\cos(\\omega+\\nu)}\\right] ]</li><li><strong>赤纬 (\\delta)</strong>： [ \\delta = \\arcsin\\left[\\sin(\\omega+\\nu)\\sin i\\right] ]</li><li><strong>半径 (r)</strong>： [ r(\\nu) = \\frac{a(1-e^2)}{1 + e\\cos\\nu} ]</li></ol><hr><h3 id="_6-关键参数的作用" tabindex="-1"><a class="header-anchor" href="#_6-关键参数的作用"><span>6. 关键参数的作用</span></a></h3><table><thead><tr><th>参数</th><th>物理意义</th><th>对轨道方程的影响</th></tr></thead><tbody><tr><td>(\\Omega)</td><td>升交点赤经</td><td>确定轨道平面在参考坐标系中的方位（绕 (z)-轴旋转）</td></tr><tr><td>(i)</td><td>轨道倾角</td><td>确定轨道平面相对于参考平面的倾斜程度</td></tr><tr><td>(\\omega)</td><td>近地点幅角</td><td>确定近地点在轨道平面内的方向</td></tr><tr><td>(\\nu)</td><td>真近点角</td><td>描述天体在轨道上的瞬时位置</td></tr></tbody></table><hr><h3 id="_7-示例-地球同步卫星轨道" tabindex="-1"><a class="header-anchor" href="#_7-示例-地球同步卫星轨道"><span>7. 示例：地球同步卫星轨道</span></a></h3><p>对地球同步轨道（(i=0<sup>\\circ)，(\\omega=0</sup>\\circ)，(\\Omega) 固定）： [ \\mathbf{r}(\\nu) = \\frac{a(1-e^2)}{1 + e\\cos\\nu} \\cdot \\begin{bmatrix} \\cos(\\Omega + \\nu) \\ \\sin(\\Omega + \\nu) \\ 0 \\end{bmatrix} ] 此时轨道完全在赤道平面内，赤经 (\\alpha = \\Omega + \\nu)，赤纬 (\\delta = 0^\\circ)。</p><hr><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span><strong>总结</strong></span></a></h3><p>• 三维轨道方程需通过旋转矩阵将轨道平面映射到参考坐标系。 • 轨道倾角 (i) 和升交点赤经 (\\Omega) 共同定义了轨道平面的空间方向。 • 最终方程形式为参数化矢量方程，依赖六个轨道根数：(a, e, i, \\Omega, \\omega, \\nu)。</p>',28)]))}]]),s=JSON.parse('{"path":"/planetsci/planetfundamental/planet_oribit.html","title":"卫星椭圆轨道六根数","lang":"zh-CN","frontmatter":{"article":false,"title":"卫星椭圆轨道六根数","icon":null,"order":1.1,"description":"什么是轨道六根数 从平面极坐标方程到三维空间坐标系 1. 轨道平面内的极坐标方程 在轨道平面内（二维），位置由 真近点角 (\\\\nu) 和半径 (r) 描述，方程为： [ r(\\\\nu) = \\\\frac{a(1-e^2)}{1 + e\\\\cos\\\\nu} ] 其中： • (a) 为半长轴 • (e) 为离心率 • (\\\\nu) 为真近点角（从近地点起算的角度） ...","head":[["meta",{"property":"og:url","content":"https://newzone.top/planetsci/planetfundamental/planet_oribit.html"}],["meta",{"property":"og:site_name","content":"Astrobiology 天体生物学"}],["meta",{"property":"og:title","content":"卫星椭圆轨道六根数"}],["meta",{"property":"og:description","content":"什么是轨道六根数 从平面极坐标方程到三维空间坐标系 1. 轨道平面内的极坐标方程 在轨道平面内（二维），位置由 真近点角 (\\\\nu) 和半径 (r) 描述，方程为： [ r(\\\\nu) = \\\\frac{a(1-e^2)}{1 + e\\\\cos\\\\nu} ] 其中： • (a) 为半长轴 • (e) 为离心率 • (\\\\nu) 为真近点角（从近地点起算的角度） ..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-12T03:21:22.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-12T03:21:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"卫星椭圆轨道六根数\\",\\"description\\":\\"什么是轨道六根数 从平面极坐标方程到三维空间坐标系 1. 轨道平面内的极坐标方程 在轨道平面内（二维），位置由 真近点角 (\\\\\\\\nu) 和半径 (r) 描述，方程为： [ r(\\\\\\\\nu) = \\\\\\\\frac{a(1-e^2)}{1 + e\\\\\\\\cos\\\\\\\\nu} ] 其中： • (a) 为半长轴 • (e) 为离心率 • (\\\\\\\\nu) 为真近点角（从近地点起算的角度） ...\\"}"]]},"git":{"createdTime":1741588840000,"updatedTime":1744428082000,"contributors":[{"name":"Astrobiology-cn","username":"Astrobiology-cn","email":"169008688+Astrobiology-cn@users.noreply.github.com","commits":5,"url":"https://github.com/Astrobiology-cn"}]},"readingTime":{"minutes":2.43,"words":728},"filePathRelative":"planetsci/planetfundamental/planet_oribit.md","localizedDate":"2025年3月10日","excerpt":"<h2>什么是轨道六根数</h2>\\n<h2>从平面极坐标方程到三维空间坐标系</h2>\\n<h3>1. 轨道平面内的极坐标方程</h3>\\n<p>在轨道平面内（二维），位置由 <strong>真近点角 (\\\\nu)</strong> 和半径 (r) 描述，方程为：\\n[\\nr(\\\\nu) = \\\\frac{a(1-e^2)}{1 + e\\\\cos\\\\nu}\\n]\\n其中：\\n• (a) 为半长轴\\n• (e) 为离心率\\n• (\\\\nu) 为真近点角（从近地点起算的角度）</p>\\n<hr>\\n<h3>2. 三维空间坐标系转换</h3>\\n<p>为了将轨道平面映射到参考坐标系（如赤道坐标系），需通过三次旋转定义轨道方向：</p>","autoDesc":true}')},6995:(a,e)=>{e.A=(a,e)=>{const t=a.__vccOpts||a;for(const[a,n]of e)t[a]=n;return t}}}]);